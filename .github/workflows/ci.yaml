name: product-catalog-ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go 1.22
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Build Application
        run: |
          cd src/product-catalog
          go mod download
          go build -o product-catalog-service main.go

      - name: Run Unit Tests
        run: |
          cd src/product-catalog
          go test ./...

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.55.2
          working-directory: src/product-catalog

  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Image
        uses: docker/build-push-action@v6
        with:
          context: src/product-catalog
          file: src/product-catalog/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/product-catalog:${{ github.run_id }}

  trivy-scan:
    name: Docker Image Vulnerability Scan
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Run Trivy Scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: docker.io/${{ secrets.DOCKER_USERNAME }}/product-catalog:${{ github.run_id }}
          format: sarif
          severity: CRITICAL,HIGH
          exit-code: 1
          ignore-unfixed: true
          output: trivy-results.sarif

      - name: Upload Trivy Scan Report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.sarif

      - name: Upload Trivy Results to GitHub Security
        if: success()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

  updatek8s:
    name: Update Kubernetes Deployment
    runs-on: ubuntu-latest
    needs: trivy-scan
    if: success()
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Image Tag in K8s Manifest
        run: |
          sed -i "s|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/product-catalog:${{ github.run_id }}|" kubernetes/productcatalog/deploy.yaml

      - name: Commit and Push Manifest Changes
        run: |
          git config --global user.email "${{ secrets.GIT_AUTHOR_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
          git add kubernetes/productcatalog/deploy.yaml
          git commit -m "[CI]: Update product-catalog image tag"
          git push origin HEAD:main -f